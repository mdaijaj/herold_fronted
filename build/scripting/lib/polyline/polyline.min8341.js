"use strict";var polyline={};function encode(current,previous,factor){var coordinate=(current=Math.round(current*factor))-(previous=Math.round(previous*factor));coordinate<<=1,current-previous<0&&(coordinate=~coordinate);for(var output="";32<=coordinate;)output+=String.fromCharCode(63+(32|31&coordinate)),coordinate>>=5;return output+=String.fromCharCode(coordinate+63)}function flipped(coords){for(var flipped=[],i=0;i<coords.length;i++)flipped.push(coords[i].slice().reverse());return flipped}polyline.decode=function(str,precision){for(var latitude_change,index=0,lat=0,lng=0,coordinates=[],shift=0,result=0,byt=null,factor=Math.pow(10,precision||5);index<str.length;){for(byt=null,result=shift=0;result|=(31&(byt=str.charCodeAt(index++)-63))<<shift,shift+=5,32<=byt;);for(latitude_change=1&result?~(result>>1):result>>1,shift=result=0;result|=(31&(byt=str.charCodeAt(index++)-63))<<shift,shift+=5,32<=byt;);lat+=latitude_change,lng+=1&result?~(result>>1):result>>1,coordinates.push([lat/factor,lng/factor])}return coordinates},polyline.encode=function(coordinates,precision){if(!coordinates.length)return"";for(var factor=Math.pow(10,precision||5),output=encode(coordinates[0][0],0,factor)+encode(coordinates[0][1],0,factor),i=1;i<coordinates.length;i++){var a=coordinates[i],b=coordinates[i-1];output+=encode(a[0],b[0],factor),output+=encode(a[1],b[1],factor)}return output},polyline.fromGeoJSON=function(geojson,precision){if(geojson&&"Feature"===geojson.type&&(geojson=geojson.geometry),!geojson||"LineString"!==geojson.type)throw new Error("Input must be a GeoJSON LineString");return polyline.encode(flipped(geojson.coordinates),precision)},polyline.toGeoJSON=function(str,precision){return{type:"LineString",coordinates:flipped(polyline.decode(str,precision))}},"object"==typeof module&&module.exports&&(module.exports=polyline);
//# sourceMappingURL=polyline.min.js.map